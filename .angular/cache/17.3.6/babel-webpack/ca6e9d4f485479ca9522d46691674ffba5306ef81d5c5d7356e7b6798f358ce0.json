{"ast":null,"code":"import { NavigationEnd } from \"@angular/router\";\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./navegation.service\";\nimport * as i3 from \"./local-storage.service\";\nimport * as i4 from \"./share-information.service\";\nexport let CheckReloadService = /*#__PURE__*/(() => {\n  class CheckReloadService {\n    constructor(objRouter, objNavegationService, objLocalStorageService, objShareInformationService) {\n      this.objRouter = objRouter;\n      this.objNavegationService = objNavegationService;\n      this.objLocalStorageService = objLocalStorageService;\n      this.objShareInformationService = objShareInformationService;\n    }\n    check() {\n      this.objRouter.events.pipe(filter(rs => rs instanceof NavigationEnd)).subscribe(event => {\n        if (event.id === 1 && event.url === event.urlAfterRedirects) {\n          this.clearVarPage(this.objRouter.url);\n        }\n      });\n    }\n    clearVarPage(url) {\n      switch (url) {\n        case \"/Product/List\":\n          {\n            this.objLocalStorageService.remove([\"cwlpro\"]);\n          }\n          break;\n      }\n    }\n    static #_ = this.ɵfac = function CheckReloadService_Factory(t) {\n      return new (t || CheckReloadService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.NavegationService), i0.ɵɵinject(i3.LocalStorageService), i0.ɵɵinject(i4.ShareInformationService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CheckReloadService,\n      factory: CheckReloadService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CheckReloadService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}